---

# Workarounds for running the playbook in this role
ansible_root_dir: "{{ playbook_dir }}"
ansible_root_dir_roles_path: "{{ ansible_root_dir }}/roles"

os_vars_dir: vars

facts_to_gather:
  - ansible_pkg_mgr
  - ansible_distribution
  - ansible_distribution_major_version
  - ansible_os_family
  - ansible_system
  - ansible_user_dir

apt_packages_to_preinstall:
  - python
  - python-apt

dnf_packages_to_preinstall:
  - python
  - python-dnf
  - libselinux-python
  - sudo

package_mgr_to_use: auto

packages_to_remove: []

packages_to_install: []

pip_packages_to_install:
  - virtualenv

# Enable this if you want a local rpm/deb copy stored
dl_packages_locally: false

dl_packages_path: "/tmp"

dl_packages_to_install:
  - name: google-chrome debian
    url: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    binary_type: deb
    path: "{{ dl_packages_path }}/google-chrome-stable_current_amd64.deb"
    # - name: no-ip
    #   url: "http://www.noip.com/client/linux/noip-duc-linux.tar.gz"
    #   binary_type: tar
    #   path: "/usr/local/src/noip-duc-linux.tar.gz"
    #   extracted_path: "/usr/local/src"
    #   shell: "cd /usr/local/src/noip-2.1.9-1/ && make install && noip2 -C"

gems_to_install: []
# - name: vagrant
#   gem_name: vagrant
#   version: "{{ vagrant_version | default('2.1.1') }}"

shell_commands: []
