---
###################
# Gather OS Facts #
###################
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ os_vars_dir }}/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ os_vars_dir }}/{{ ansible_distribution }}.yml"
    - "{{ os_vars_dir }}/{{ ansible_os_family }}.yml"
    - default.yml
  tags:
    - packages-to-install
    - vars
    - dl

#######################
# Install OS Packages #
#######################
- name: remove unneccessary packages
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    "{{ packages_to_remove }}"
  tags:
    - packages
    - remove-packages

- name: pre-install software
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ packages_to_preinstall }}"
  tags:
    - packages
    - packages-to-preinstall

- name: install software
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ packages_to_install }}"
  tags:
    - packages
    - packages-to-install

######################################
# Install Custom/Downloaded Packages #
######################################
- name: manually download packages and files
  get_url:
    url: "{{ item.url }}"
    dest: '{{ item.path }}'
    mode: 0644
    validate_certs: no
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - dl_packages_locally | bool
    - item.path is defined
  tags:
    - pkgs
    - dl

- name: install downloaded yum pkgs
  yum:
    name: "{{ item.url }}"
    state: present
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - dl_packages_locally | bool
    - ansible_distribution == 'CentOS'
    - item.path is not defined
    - "item.binary_type == 'rpm'"
  tags:
    - pkgs
    - dl
    - install-pkgs

- name: install downloaded dnf pkgs
  dnf:
    name: "{{ item.url }}"
    state: present
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - dl_packages_locally | bool
    - "ansible_distribution == 'Fedora'"
    - item.path is not defined
    - "item.binary_type == 'rpm'"
  tags:
    - pkgs
    - dl
    - install-pkgs

- name: install deb packages from web url
  apt:
    deb: "{{ item.url }}"
    state: present
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - dl_packages_locally | bool
    - ansible_os_family == "Debian"
    - item.path is not defined
    - "item.binary_type == 'deb'"
  tags:
    - pkgs
    - dl
    - install-pkgs

- name: install downloaded apt pkgs
  apt:
    deb: "{{ item.path }}"
    state: present
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - dl_packages_locally | bool
    - ansible_os_family == "Debian"
    - item.path is defined
    - "item.binary_type == 'deb'"
  tags:
    - pkgs
    - dl
    - install-pkgs

####################
# Install Archives #
####################
- name: unarchive any downloaded files
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ item.extracted_path }}"
    remote_src: "{{ item.remote_src | default(true) }}"
  with_items:
    - "{{ dl_packages_to_install }}"
  when:
    - item.extracted_path is defined
    - "item.binary_type == 'tar'"
  tags:
    - unarchive

# - name: install unarchived files
#   shell: "{{ item.shell }}"
#   with_items:
#     - "{{ dl_packages_to_install }}"
#   when:
#     - item.shell is defined
#     - "item.binary_type == 'tar'"
#   tags:
#     - unarchive
#     - shell

#####################
# Install Ruby Gems #
#####################
- name: install ruby gems
  gem:
    name: "{{ item.gem_name }}"
    version: "{{ item.version }}"
    state: "{{ item.state | default('present') }}"
  with_items:
    - "{{ gems_to_install }}"
  tags:
    - gems

##############################
# Run any erroneous commands #
##############################
# - name: run any erroneous shell commands
#   shell: "{{ item.shell }}"
#   with_items:
#     - "{{ shell_commands }}"
